{"version":3,"sources":["screens/addpizzascreen.tsx","components/login/login.tsx","components/navbar/navbar.tsx","components/signin/signIn.tsx","components/cart/cartItem.tsx","screens/cartscreen.tsx","redux/constants/action-types.js","components/pizza/pizzaInfoModal.tsx","components/pizza/pizzaItem.tsx","components/pizza/updatePizzaModal.tsx","components/pizza/pizza.tsx","screens/homescreen.tsx","redux/actions/pizzaAction.js","components/order/order.tsx","screens/orderscreen.tsx","screens/adminorderscreen.tsx","routes/routes.tsx","App.tsx","redux/reducers/pizzaReducer.js","redux/reducers/index.js","redux/store.ts","index.tsx"],"names":["AddPizza","formik","useFormik","initialValues","name","smallPrice","mediumPrice","largePrice","category","image","description","onSubmit","values","a","pizzaData","variant","prices","small","medium","large","userid","JSON","parse","localStorage","getItem","_id","axios","post","headers","alert","console","log","validationSchema","yup","required","min","oneOf","url","className","style","backgroundColor","fontSize","handleSubmit","errors","type","id","value","placeholder","onChange","handleChange","Login","props","history","useHistory","email","password","then","res","setItem","get","stringify","data","isAdmin","setLoggedIn","push","catch","e","max","href","color","NavBar","Navbar","collapseOnSelect","expand","Brand","Toggle","Collapse","Nav","isLoggedIn","NavDropdown","title","split","Item","onClick","removeItem","Link","Signin","useState","passwordsMatch","setMatch","confirmPassword","role","CartItem","item","quantity","icon","faPlusSquare","addQuantity","faMinusSquare","removeQuantity","src","alt","width","height","faTrashAlt","deleteAnItem","CartScreen","cartItems","changeItems","totalAmount","i","length","price","arrayRemove","arr","filter","ele","textAlign","marginTop","marginRight","map","orderedItem","orderItems","orderAmount","orderItem","actionTypes","PizzaModal","Modal","show","onHide","handleShow","Header","closeButton","Title","Body","Footer","PizzaItem","pizza","setVariant","currentTarget","option","key","setQuantity","Number","addToCart","deletePizza","faEdit","handleUpdateModalShow","UpdatePizzaModal","put","updatedPizza","_ids","pizzaID","setScreenUpdated","showUpdateModal","Pizza","setShow","setUpdateModal","margin","cartItem","allCartItems","alreadyPresentItem","result","status","Homescreen","pizzas","useSelector","state","allPizzas","dispatch","useDispatch","categoryPizzas","setCategoryPizzas","isLoaded","setLoaded","selectedCategory","isScreenUpdated","getPizzas","payload","setPizzas","useEffect","Order","order","items","Date","createdAt","toDateString","isDelivered","OrderScreen","ordersList","setOrders","getOrders","AllOrders","setList","isListUpdated","setListUpdated","handleClick","orderID","Routes","exact","path","AOS","init","App","initialState","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35523e80.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nfunction AddPizza() {\r\n  let formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      smallPrice: 0,\r\n      mediumPrice: 0,\r\n      largePrice: 0,\r\n      category: \"\",\r\n      image: \"\",\r\n      description: \"\",\r\n    },\r\n    onSubmit: async (values) => {\r\n      let pizzaData = {\r\n        name: values.name,\r\n        variant: [\"small\", \"medium\", \"large\"],\r\n        prices: [\r\n          {\r\n            small: values.smallPrice,\r\n            medium: values.mediumPrice,\r\n            large: values.largePrice,\r\n          },\r\n        ],\r\n        category: values.category,\r\n        image: values.image,\r\n        description: values.description,\r\n        userid: JSON.parse(localStorage.getItem(\"currentUser\") as string)._id,\r\n      };\r\n      try {\r\n        await axios.post(\"http://localhost:5000/addPizza\", pizzaData, {\r\n          headers: {\r\n            \"auth-token\": `${localStorage.getItem(\"jwt-token\")}`,\r\n          },\r\n        });\r\n        alert(\"Pizza Added!\");\r\n      } catch (e) {\r\n        alert(\"Something bad happened!\");\r\n        console.log(e);\r\n      }\r\n    },\r\n    validationSchema: yup.object({\r\n      name: yup.string().required().min(3, \"Minimum 3 characters required\"),\r\n      smallPrice: yup.number().min(10).required(),\r\n      mediumPrice: yup.number().min(10).required(),\r\n      largePrice: yup.number().min(10).required(),\r\n      category: yup.string().oneOf([\"veg\", \"nonveg\"]).required(),\r\n      image: yup.string().url().required(),\r\n      description: yup.string().required(),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <div className=\"row justify-content-center mt-5\">\r\n      <div\r\n        className=\"col-md-5 mt-5 text-left shadow-lg p-3 mb-5 bg-white-rounded\"\r\n        style={{ backgroundColor: \"white\" }}\r\n      >\r\n        <h2 className=\"text-center m-2\" style={{ fontSize: \"35px\" }}>\r\n          Add Pizza\r\n        </h2>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <input\r\n            className={\r\n              formik.errors.name ? \"form-control is-invalid\" : \"form-control\"\r\n            }\r\n            type=\"text\"\r\n            required\r\n            id=\"name\"\r\n            value={formik.values.name}\r\n            placeholder=\"Enter pizza name\"\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.name ? (\r\n            <div className=\"invalid-feedback\">{formik.errors.name}</div>\r\n          ) : null}\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            className={\r\n              formik.errors.category\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n            id=\"category\"\r\n            placeholder=\"Enter category\"\r\n            value={formik.values.category}\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.category ? (\r\n            <div className=\"invalid-feedback\">{formik.errors.category}</div>\r\n          ) : null}\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            className={\r\n              formik.errors.description\r\n                ? \"form-control is-invalid\"\r\n                : \"form-control\"\r\n            }\r\n            id=\"description\"\r\n            placeholder=\"Enter description\"\r\n            value={formik.values.description}\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.description ? (\r\n            <div className=\"invalid-feedback\">{formik.errors.description}</div>\r\n          ) : null}\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter pizza image's url\"\r\n            required\r\n            className={\r\n              formik.errors.image ? \"form-control is-invalid\" : \"form-control\"\r\n            }\r\n            id=\"image\"\r\n            value={formik.values.image}\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.image ? (\r\n            <div className=\"invalid-feedback\">{formik.errors.image}</div>\r\n          ) : null}\r\n          <div className=\"flex-container\">\r\n            <div className=\"w-100 text-center\">\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Small Price\"\r\n                required\r\n                className={\r\n                  formik.errors.smallPrice\r\n                    ? \"form-control is-invalid\"\r\n                    : \"form-control\"\r\n                }\r\n                id=\"smallPrice\"\r\n                value={formik.values.smallPrice}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.smallPrice ? (\r\n                <div className=\"invalid-feedback\">\r\n                  {formik.errors.smallPrice}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"w-100 text-center\">\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Medium Price\"\r\n                required\r\n                className={\r\n                  formik.errors.mediumPrice\r\n                    ? \"form-control is-invalid\"\r\n                    : \"form-control\"\r\n                }\r\n                id=\"mediumPrice\"\r\n                value={formik.values.mediumPrice}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.mediumPrice ? (\r\n                <div className=\"invalid-feedback\">\r\n                  {formik.errors.mediumPrice}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"w-100 text-center\">\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Large Price\"\r\n                required\r\n                className={\r\n                  formik.errors.largePrice\r\n                    ? \"form-control is-invalid\"\r\n                    : \"form-control\"\r\n                }\r\n                id=\"largePrice\"\r\n                value={formik.values.largePrice}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.largePrice ? (\r\n                <div className=\"invalid-feedback\">\r\n                  {formik.errors.largePrice}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          <input type=\"submit\" value=\"ADD PIZZA\" className=\"btn\" />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddPizza;\r\n","import axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { loginStatusProps } from \"../../interfaces/interfaces\";\r\n\r\nfunction Login(props: loginStatusProps) {\r\n  let history = useHistory();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      //recieving jwt token from server\r\n      axios\r\n        .post(\"http://localhost:5000/login\", values)\r\n        .then((res) => {\r\n          localStorage.setItem(\"jwt-token\", `${res.headers[\"auth-token\"]}`);\r\n\r\n          //getting user details from server using jwt-token\r\n          axios\r\n            .get(\"http://localhost:5000/getUserDetails\", {\r\n              headers: {\r\n                \"auth-token\": `${res.headers[\"auth-token\"]}`,\r\n              },\r\n            })\r\n            .then((res) => {\r\n              //saving user's information\r\n              localStorage.setItem(\"currentUser\", JSON.stringify(res.data));\r\n              localStorage.setItem(\r\n                \"isAdmin\",\r\n                JSON.stringify(\r\n                  JSON.parse(localStorage.getItem(\"currentUser\") as string)\r\n                    .isAdmin\r\n                )\r\n              );\r\n              props.setLoggedIn(true);\r\n              history.push(\"/\");\r\n            })\r\n            .catch(console.log);\r\n        })\r\n        .catch((e) => {\r\n          alert(\"Something bad happened!\");\r\n          console.log(e);\r\n        });\r\n    },\r\n    validationSchema: yup.object({\r\n      email: yup\r\n        .string()\r\n        .min(6, \"Type a valid email address!\")\r\n        .email(\"Type a valid email address!\")\r\n        .required(\"This field is required!\"),\r\n      password: yup\r\n        .string()\r\n        .min(6, \"Password is too short.\")\r\n        .max(12, \"Password is too long.\")\r\n        .required(\"This field is required.\"),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <div className=\"login\" data-aos=\"fade-up\">\r\n      <div className=\"row justify-content-center mt-5\">\r\n        <div\r\n          className=\"col-md-5 mt-5 text-left shadow-lg p-3 mb-5 bg-white-rounded\"\r\n          style={{ backgroundColor: \"white\" }}\r\n        >\r\n          <h2 className=\"text-center m-2\" style={{ fontSize: \"35px\" }}>\r\n            Login\r\n          </h2>\r\n          <div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"email\"\r\n                required\r\n                className={\r\n                  formik.errors.email\r\n                    ? \"form-control is-invalid\"\r\n                    : \"form-control\"\r\n                }\r\n                id=\"email\"\r\n                value={formik.values.email}\r\n                onChange={(e) => {\r\n                  formik.handleChange(e);\r\n                }}\r\n              />\r\n              {formik.errors.email ? (\r\n                <div className=\"invalid-feedback\">{formik.errors.email}</div>\r\n              ) : null}\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                required\r\n                className={\r\n                  formik.errors.password\r\n                    ? \"form-control is-invalid\"\r\n                    : \"form-control\"\r\n                }\r\n                id=\"password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.password ? (\r\n                <div className=\"invalid-feedback\">{formik.errors.password}</div>\r\n              ) : null}\r\n              <input className=\"btn mt-3 mb-3\" type=\"submit\" value=\"LOGIN\" />\r\n              <br />\r\n              <a href=\"/signin\" style={{ color: \"black\" }}>\r\n                Click Here to Register\r\n              </a>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { loginStatusProps } from \"../../interfaces/interfaces\";\r\n\r\nfunction NavBar(props: loginStatusProps) {\r\n  //function to handle user logout\r\n  const handleClick = () => {\r\n    localStorage.removeItem(\"currentUser\");\r\n    localStorage.removeItem(\"jwt-token\");\r\n    localStorage.setItem(\"isAdmin\", JSON.stringify(false));\r\n    props.setLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" className=\"Navbar\">\r\n      <Navbar.Brand href=\"/\">SHEY PIZZA</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"ms-auto\">\r\n          {props.isLoggedIn ? (\r\n            <NavDropdown\r\n              title={`${\r\n                JSON.parse(\r\n                  localStorage.getItem(\"currentUser\") as string\r\n                ).name.split(\" \")[0]\r\n              }`}\r\n              id=\"basic-nav-dropdown\"\r\n              className=\"Menu-Link\"\r\n            >\r\n              <NavDropdown.Item\r\n                className=\"Menu-Link\"\r\n                onClick={() => {\r\n                  handleClick();\r\n                }}\r\n              >\r\n                Logout\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/orders\" className=\"Menu-Link\">\r\n                Orders\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          ) : (\r\n            <Nav.Link href=\"/login\" className=\"Menu-Link\">\r\n              Login\r\n            </Nav.Link>\r\n          )}\r\n          <Nav.Link href=\"/cart\" className=\"Menu-Link\">\r\n            Cart\r\n          </Nav.Link>\r\n          {JSON.parse(localStorage.getItem(\"isAdmin\") as string) ? (\r\n            <Nav.Link href=\"/addPizza\" className=\"Menu-Link\">\r\n              Add Pizza\r\n            </Nav.Link>\r\n          ) : null}\r\n          {JSON.parse(localStorage.getItem(\"isAdmin\") as string) ? (\r\n            <Nav.Link href=\"/allOrders\" className=\"Menu-Link\">\r\n              Orders\r\n            </Nav.Link>\r\n          ) : null}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\n\r\nfunction Signin() {\r\n  let [passwordsMatch, setMatch] = useState(true);\r\n  let history = useHistory();\r\n\r\n  let formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      if (values.confirmPassword !== values.password) return setMatch(false);\r\n      if (values.confirmPassword === values.password) setMatch(true);\r\n\r\n      axios\r\n        .post(\"http://localhost:5000/register\", {\r\n          name: values.name,\r\n          email: values.email,\r\n          password: values.password,\r\n        })\r\n        .then(() => {\r\n          history.push(\"/login\");\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          alert(\"Something bad happened!\");\r\n        });\r\n    },\r\n    validationSchema: yup.object({\r\n      name: yup\r\n        .string()\r\n        .required(\"This field is required!\")\r\n        .min(6, \"Too short\"),\r\n      email: yup\r\n        .string()\r\n        .min(6, \"Type a valid email address!\")\r\n        .email(\"Type a valid email address!\")\r\n        .required(\"This field is required.\"),\r\n      password: yup\r\n        .string()\r\n        .min(6, \"Password is too short.\")\r\n        .max(12, \"Password is too long.\")\r\n        .required(\"This field is required.\"),\r\n      confirmPassword: yup\r\n        .string()\r\n        .min(6, \"Password is too short.\")\r\n        .max(12, \"Password is too long.\")\r\n        .required(\"This field is required.\"),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <div className=\"register\" data-aos=\"fade-up\">\r\n      <div className=\"row justify-content-center mt-5\">\r\n        <div\r\n          className=\"col-md-5 mt-5 text-left shadow-lg p-3 mb-5 bg-white-rounded\"\r\n          style={{ backgroundColor: \"white\" }}\r\n        >\r\n          <h2 className=\"text-center m-2\" style={{ fontSize: \"35px\" }}>\r\n            Register\r\n          </h2>\r\n          <div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"name\"\r\n                required\r\n                className={\r\n                  formik.errors.name\r\n                    ? \"form-control is-invalid\"\r\n                    : \"form-control\"\r\n                }\r\n                id=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name ? (\r\n                <div className=\"invalid-feedback\">{formik.errors.name}</div>\r\n              ) : null}\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"email\"\r\n                required\r\n                className={\r\n                  formik.errors.email\r\n                    ? \"form-control is-invalid\"\r\n                    : \"form-control\"\r\n                }\r\n                id=\"email\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.email ? (\r\n                <div className=\"invalid-feedback\">{formik.errors.email}</div>\r\n              ) : null}\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                required\r\n                className={\r\n                  formik.errors.password\r\n                    ? \"form-control is-invalid\"\r\n                    : \"form-control\"\r\n                }\r\n                id=\"password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.password ? (\r\n                <div className=\"invalid-feedback\">{formik.errors.password}</div>\r\n              ) : null}\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"confirm password\"\r\n                required\r\n                className={\r\n                  formik.errors.confirmPassword\r\n                    ? \"form-control is-invalid\"\r\n                    : \"form-control\"\r\n                }\r\n                id=\"confirmPassword\"\r\n                value={formik.values.confirmPassword}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.confirmPassword ? (\r\n                <div className=\"invalid-feedback\">\r\n                  {formik.errors.confirmPassword}\r\n                </div>\r\n              ) : null}\r\n              <input className=\"btn mt-3 mb-3\" type=\"submit\" value=\"REGISTER\" />\r\n              <br />\r\n              {passwordsMatch ? null : (\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  Passwords donot match\r\n                </div>\r\n              )}\r\n              <a href=\"/login\" style={{ color: \"black\" }}>\r\n                Click Here to Login\r\n              </a>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n","import {\r\n  faTrashAlt,\r\n  faPlusSquare,\r\n  faMinusSquare,\r\n} from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { cartProps } from \"../../interfaces/interfaces\";\r\n\r\nfunction CartItem(props: cartProps) {\r\n  return (\r\n    <>\r\n      <div className=\"text-left m-1 w-100\">\r\n        <h1>\r\n          {props.item.name} [{props.item.variant}]\r\n        </h1>\r\n        <h1>\r\n          Price: {props.item.quantity} x{\" \"}\r\n          {\r\n            props.item.prices[0][\r\n              (props.item.variant as \"small\") || \"medium\" || \"large\"\r\n            ]\r\n          }\r\n        </h1>\r\n        <h1>\r\n          Quantity:{\" \"}\r\n          <FontAwesomeIcon\r\n            className=\"hover-item\"\r\n            style={{ color: \"green\" }}\r\n            icon={faPlusSquare}\r\n            onClick={() => {\r\n              props.addQuantity(props.item);\r\n            }}\r\n          />{\" \"}\r\n          {props.item.quantity}{\" \"}\r\n          <FontAwesomeIcon\r\n            className=\"hover-item\"\r\n            style={{ color: \"red\" }}\r\n            icon={faMinusSquare}\r\n            onClick={() => {\r\n              props.removeQuantity(props.item);\r\n            }}\r\n          />\r\n        </h1>\r\n      </div>\r\n      <div className=\"m-1 w-100\">\r\n        <img\r\n          src={props.item.image}\r\n          className=\"img-fluid\"\r\n          alt=\"\"\r\n          style={{ width: \"80px\", height: \"80px\" }}\r\n        />\r\n      </div>\r\n      <div className=\"m-1 w-100\">\r\n        <FontAwesomeIcon\r\n          icon={faTrashAlt}\r\n          style={{ color: \"red\" }}\r\n          className=\"mt-5 hover-item\"\r\n          onClick={() => {\r\n            props.deleteAnItem(props.item);\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CartItem;\r\n","import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport CartItem from \"../components/cart/cartItem\";\r\nimport { cartItem } from \"../interfaces/interfaces\";\r\n\r\nfunction CartScreen({ isLoggedIn }: { isLoggedIn: boolean }) {\r\n  let [cartItems, changeItems] = useState<cartItem[]>(\r\n    JSON.parse(localStorage.getItem(\"cart\") as string)\r\n  );\r\n  let totalAmount = 0;\r\n\r\n  //updating the total amount based on cart items\r\n  for (let i = 0; i < cartItems.length; i++) {\r\n    totalAmount += cartItems[i].price;\r\n  }\r\n\r\n  //this function will remove an item \"val\" from an array \"arr\"\r\n  const arrayRemove = (arr: cartItem[], value: cartItem) => {\r\n    return arr.filter(function (ele) {\r\n      return ele !== value;\r\n    });\r\n  };\r\n\r\n  //deletes an item from the cart\r\n  const deleteAnItem = (item: cartItem) => {\r\n    changeItems(arrayRemove(cartItems, item));\r\n    cartItems = arrayRemove(cartItems, item);\r\n    localStorage.setItem(\"cart\", JSON.stringify(cartItems));\r\n  };\r\n\r\n  //adds the quantity of an item in the cart\r\n  const addQuantity = (item: cartItem) => {\r\n    cartItems = arrayRemove(cartItems, item);\r\n    item.quantity += 1;\r\n    item.price +=\r\n      item.prices[0][(item.variant as \"small\") || \"medium\" || \"large\"];\r\n    cartItems.push(item);\r\n    changeItems(cartItems);\r\n    localStorage.setItem(\"cart\", JSON.stringify(cartItems));\r\n  };\r\n\r\n  //reduces the quantity of an item in the cart\r\n  const removeQuantity = (item: cartItem) => {\r\n    cartItems = arrayRemove(cartItems, item);\r\n    item.quantity -= 1;\r\n    item.price -=\r\n      item.prices[0][(item.variant as \"small\") || \"medium\" || \"large\"];\r\n    cartItems.push(item);\r\n    changeItems(cartItems);\r\n    localStorage.setItem(\"cart\", JSON.stringify(cartItems));\r\n  };\r\n\r\n  //function to order cart items to the server\r\n  const orderItem = () => {\r\n    if (isLoggedIn === false) return alert(\"You must be logged in to proceed!\");\r\n    let orderedItem = {\r\n      email: JSON.parse(localStorage.getItem(\"currentUser\") as string).email,\r\n      name: JSON.parse(localStorage.getItem(\"currentUser\") as string).name,\r\n      userid: JSON.parse(localStorage.getItem(\"currentUser\") as string)._id,\r\n      orderItems: cartItems,\r\n      orderAmount: totalAmount,\r\n    };\r\n    axios\r\n      .post(\"http://localhost:5000/postOrders\", orderedItem, {\r\n        headers: {\r\n          \"auth-token\": `${localStorage.getItem(\"jwt-token\")}`,\r\n        },\r\n      })\r\n      .then(() => {\r\n        alert(\"Your order has been placed!\");\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n      <div\r\n        className=\"row justify-content-center p-2\"\r\n        data-aos=\"fade-down\"\r\n        style={{ marginRight: \"-15px\" }}\r\n      >\r\n        <div className=\"col-md-6\">\r\n          <h2 style={{ fontSize: \"40px\" }}>My Cart</h2>\r\n          {cartItems.map((item) => {\r\n            return (\r\n              <>\r\n                <div className=\"flex-container\" data-aos=\"fade-up\">\r\n                  <CartItem\r\n                    item={item}\r\n                    deleteAnItem={deleteAnItem}\r\n                    addQuantity={addQuantity}\r\n                    removeQuantity={removeQuantity}\r\n                  />\r\n                </div>\r\n                <hr />\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"col-md-4 text-right\">\r\n          <h2 style={{ fontSize: \"45px\" }}>Subtotal: Rs. {totalAmount}/-</h2>\r\n          <div>\r\n            <span>\r\n              <button\r\n                className=\"btn\"\r\n                onClick={() => {\r\n                  orderItem();\r\n                }}\r\n              >\r\n                Order now\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","export const actionTypes = {\r\n  SET_PIZZAS: \"SET_PIZZAS\",\r\n};\r\n","import { Modal } from \"react-bootstrap\";\r\nimport { pizzaModalProps } from \"../../interfaces/interfaces\";\r\n\r\nfunction PizzaModal(props: pizzaModalProps) {\r\n  return (\r\n    <Modal show={props.show} onHide={props.handleShow}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{props.name}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body style={{ textAlign: \"center\" }}>\r\n        <img\r\n          src={props.image}\r\n          alt={props.name}\r\n          className=\"img-fluid\"\r\n          style={{ height: \"400px\" }}\r\n        />\r\n        <p>{props.description}</p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <button className=\"btn\" onClick={props.handleShow}>\r\n          CLOSE\r\n        </button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default PizzaModal;\r\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { pizzaItemProps } from \"../../interfaces/interfaces\";\r\n\r\nfunction PizzaItem(props: pizzaItemProps) {\r\n  return (\r\n    <>\r\n      <div onClick={() => props.handleShow()} className=\"hover-item\">\r\n        <h1>{props.pizza.name}</h1>\r\n        <img\r\n          src={props.pizza.image}\r\n          alt={props.pizza.name}\r\n          className=\"img-fluid\"\r\n          style={{ height: \"200px\", width: \"200px\" }}\r\n        />\r\n      </div>\r\n      <div className=\"flex-container\">\r\n        <div className=\"m-1 w-100\">\r\n          <p>Variants</p>\r\n          <select\r\n            className=\"form-control\"\r\n            value={props.variant}\r\n            onChange={(e) => {\r\n              props.setVariant(\r\n                e.currentTarget.value as \"small\" | \"medium\" | \"large\"\r\n              );\r\n            }}\r\n          >\r\n            {props.pizza.variant.map((option: string, key: number) => {\r\n              return <option key={key}>{option}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div className=\"m-1 w-100\">\r\n          <p>Quantity</p>\r\n          <select\r\n            className=\"form-control\"\r\n            value={props.quantity}\r\n            onChange={(e) => {\r\n              props.setQuantity(Number(e.currentTarget.value));\r\n            }}\r\n          >\r\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((quantity, key) => {\r\n              return <option key={key}>{quantity}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex-container\">\r\n        <div className=\"m-1 w-100\">\r\n          <h1 className=\"mt-1\">\r\n            Price : {props.pizza.prices[0][props.variant] * props.quantity}\r\n          </h1>\r\n        </div>\r\n        <div className=\"m-1 w-100\">\r\n          <button\r\n            className=\"btn\"\r\n            onClick={() => {\r\n              props.addToCart(props.pizza);\r\n              alert(\"Added to Cart!\");\r\n            }}\r\n          >\r\n            ADD TO CART\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {JSON.parse(localStorage.getItem(\"isAdmin\") as string) ? (\r\n        <div className=\"flex-container\">\r\n          <div className=\"m-1 w-100\">\r\n            <FontAwesomeIcon\r\n              icon={faTrashAlt}\r\n              style={{ color: \"red\" }}\r\n              className=\"hover-item\"\r\n              onClick={() => {\r\n                props.deletePizza();\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"m-1 w-100\">\r\n            <FontAwesomeIcon\r\n              icon={faEdit}\r\n              style={{ color: \"green\" }}\r\n              className=\"hover-item\"\r\n              onClick={() => {\r\n                props.handleUpdateModalShow();\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PizzaItem;\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { updatePizzaModalProps } from \"../../interfaces/interfaces\";\r\nimport axios from \"axios\";\r\n\r\nfunction UpdatePizzaModal(props: updatePizzaModalProps) {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n    },\r\n    onSubmit: async (values) => {\r\n      try {\r\n        //updating pizza inside the database\r\n        await axios.put(\r\n          \"http://localhost:5000/updatePizza\",\r\n          {\r\n            updatedPizza: {\r\n              name: values.name,\r\n            },\r\n            _ids: {\r\n              userid: JSON.parse(localStorage.getItem(\"currentUser\") as string)\r\n                ._id,\r\n              pizzaID: props.pizzaID,\r\n            },\r\n          },\r\n          {\r\n            headers: {\r\n              \"auth-token\": `${localStorage.getItem(\"jwt-token\")}`,\r\n            },\r\n          }\r\n        );\r\n        alert(\"Item updated!\");\r\n        props.setScreenUpdated(true);\r\n      } catch (e) {\r\n        alert(\"Something bad happened!\");\r\n        console.log(e);\r\n      }\r\n    },\r\n    validationSchema: yup.object({\r\n      name: yup\r\n        .string()\r\n        .min(5, \"Name is too short!\")\r\n        .required(\"This field is required\"),\r\n    }),\r\n  });\r\n  return (\r\n    <Modal show={props.showUpdateModal} onHide={props.handleUpdateModalShow}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Update Pizza</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body style={{ textAlign: \"center\" }}>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter the updated name\"\r\n            className={\r\n              formik.errors.name\r\n                ? \"form-control is-invalid text-center\"\r\n                : \"form-control text-center\"\r\n            }\r\n            id=\"name\"\r\n            value={formik.values.name}\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.name ? (\r\n            <div className=\"invalid-feedback\">{formik.errors.name}</div>\r\n          ) : null}\r\n          <input type=\"submit\" value=\"Update Pizza\" className=\"btn\" />\r\n        </form>\r\n      </Modal.Body>\r\n      <Modal.Footer></Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default UpdatePizzaModal;\r\n","import { useState } from \"react\";\r\nimport { pizzaProps, Pizzas, cartItem } from \"./../../interfaces/interfaces\";\r\nimport PizzaModal from \"./pizzaInfoModal\";\r\nimport axios from \"axios\";\r\nimport PizzaItem from \"./pizzaItem\";\r\nimport UpdatePizzaModal from \"./updatePizzaModal\";\r\n\r\nfunction Pizza(props: pizzaProps) {\r\n  const [variant, setVariant] = useState<\"small\" | \"medium\" | \"large\">(\"small\");\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [show, setShow] = useState(false);\r\n  const [showUpdateModal, setUpdateModal] = useState(false);\r\n\r\n  //handle pizza information modal\r\n  const handleShow = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  //handle pizza update modal\r\n  const handleUpdateModalShow = () => {\r\n    setUpdateModal(!showUpdateModal);\r\n  };\r\n\r\n  //function to remove an existing element from an array\r\n  const arrayRemove = (arr: cartItem[], value: cartItem) => {\r\n    return arr.filter((ele) => {\r\n      return ele !== value;\r\n    });\r\n  };\r\n\r\n  //function to add an element to a cart\r\n  const addToCart = (pizza: Pizzas) => {\r\n    //item to be added\r\n    let cartItem = {\r\n      _id: pizza._id,\r\n      quantity: quantity,\r\n      name: pizza.name,\r\n      image: pizza.image,\r\n      price: pizza.prices[0][variant],\r\n      prices: pizza.prices,\r\n      variant: variant,\r\n    };\r\n\r\n    //adding the item\r\n    let allCartItems: cartItem[] = JSON.parse(\r\n      localStorage.getItem(\"cart\") as string\r\n    );\r\n\r\n    //checking whether the item already exists\r\n    let alreadyPresentItem = allCartItems.filter((item) => {\r\n      return item._id === cartItem._id && item.variant === cartItem.variant;\r\n    });\r\n\r\n    if (alreadyPresentItem.length === 0) {\r\n      //if the current item is not already present in the cart\r\n      allCartItems.push(cartItem);\r\n      localStorage.setItem(\"cart\", JSON.stringify(allCartItems as cartItem[]));\r\n    } else {\r\n      //if current item is present, then avoiding duplication by updating\r\n      cartItem.quantity = alreadyPresentItem[0].quantity + cartItem.quantity;\r\n      cartItem.price = cartItem.quantity * cartItem.price;\r\n      let result = arrayRemove(allCartItems, alreadyPresentItem[0]);\r\n      result.push(cartItem);\r\n      localStorage.setItem(\"cart\", JSON.stringify(result as cartItem[]));\r\n    }\r\n  };\r\n\r\n  //function to enable admin to delete pizza from an array permanently\r\n  const deletePizza = () => {\r\n    axios\r\n      .post(\r\n        \"http://localhost:5000/deletePizza\",\r\n        {\r\n          pizzaID: props.pizza._id,\r\n          userid: JSON.parse(localStorage.getItem(\"currentUser\") as string)._id,\r\n        },\r\n        {\r\n          headers: {\r\n            \"auth-token\": `${localStorage.getItem(\"jwt-token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          alert(\"Item Deleted\");\r\n          props.setScreenUpdated(true);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        alert(\"Something bad happened\");\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ margin: \"70px\", textAlign: \"center\" }}\r\n      className=\"shadow-lg p-3 mb-5 bg-white rounded\"\r\n    >\r\n      <PizzaItem\r\n        pizza={props.pizza}\r\n        handleShow={handleShow}\r\n        variant={variant}\r\n        setVariant={setVariant}\r\n        quantity={quantity}\r\n        setQuantity={setQuantity}\r\n        addToCart={addToCart}\r\n        deletePizza={deletePizza}\r\n        handleUpdateModalShow={handleUpdateModalShow}\r\n      />\r\n      <PizzaModal\r\n        name={props.pizza.name}\r\n        description={props.pizza.description}\r\n        show={show}\r\n        handleShow={handleShow}\r\n        image={props.pizza.image}\r\n      />\r\n      <UpdatePizzaModal\r\n        pizzaID={props.pizza._id}\r\n        showUpdateModal={showUpdateModal}\r\n        handleUpdateModalShow={handleUpdateModalShow}\r\n        setScreenUpdated={props.setScreenUpdated}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pizza;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setPizzas } from \"./../redux/actions/pizzaAction\";\r\nimport Pizza from \"../components/pizza/pizza\";\r\nimport { RootState } from \"../redux/store\";\r\nimport { Pizzas } from \"./../interfaces/interfaces\";\r\n\r\nfunction Homescreen() {\r\n  const pizzas: Pizzas[] = useSelector(\r\n    (state: RootState) => state.allPizzas.pizzas\r\n  );\r\n  const dispatch = useDispatch();\r\n  const [categoryPizzas, setCategoryPizzas] = useState([] as Pizzas[]);\r\n  const [isLoaded, setLoaded] = useState(false);\r\n  const [category, selectedCategory] = useState(\"all\");\r\n  const [isScreenUpdated, setScreenUpdated] = useState(false);\r\n\r\n  //getting pizzas fromn database\r\n  function getPizzas() {\r\n    axios\r\n      .get(\"http://localhost:5000/getPizzas\")\r\n      .then((res) => {\r\n        dispatch(setPizzas(res.data));\r\n        setScreenUpdated(false);\r\n      })\r\n      .catch((e) => {\r\n        alert(\"something bad happened!\");\r\n        console.log(e);\r\n        setLoaded(true);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPizzas();\r\n  }, [isScreenUpdated]);\r\n\r\n  //handling the filter functionality based on pizzas being veg, nonveg or all\r\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    selectedCategory(e.currentTarget.value);\r\n    if (e.currentTarget.value === \"veg\" || \"nonveg\") {\r\n      setCategoryPizzas(\r\n        pizzas.filter((pizza) => {\r\n          return pizza.category === e.currentTarget.value;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  if (!pizzas[0] && !isLoaded) {\r\n    return (\r\n      <div className=\"d-flex mt-5 justify-content-center\">\r\n        <div className=\"spinner-border\" role=\"status\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!pizzas[0])\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Oops! unable to load data! Maybe, you have lost your internet connection\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row mt-5 bg-white rounded shadow-lg p-3 mb-5 justify-content-center\">\r\n          <div className=\"col-md-4 m-3\">\r\n            <select\r\n              className=\"form-select\"\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n            >\r\n              <option value=\"all\">All</option>\r\n              <option value=\"veg\">Veg</option>\r\n              <option value=\"nonveg\">Non Veg</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          {category === \"all\"\r\n            ? pizzas.map((pizza, key) => {\r\n                return (\r\n                  <div\r\n                    className=\"col-md-6 row-eq-height\"\r\n                    data-aos=\"fade-up\"\r\n                    key={key}\r\n                  >\r\n                    <Pizza pizza={pizza} setScreenUpdated={setScreenUpdated} />\r\n                  </div>\r\n                );\r\n              })\r\n            : categoryPizzas.map((pizza, key) => {\r\n                return (\r\n                  <div\r\n                    className=\"col-md-6 row-eq-height\"\r\n                    data-aos=\"fade-up\"\r\n                    key={key}\r\n                  >\r\n                    <Pizza pizza={pizza} setScreenUpdated={setScreenUpdated} />\r\n                  </div>\r\n                );\r\n              })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Homescreen;\r\n","import { actionTypes } from \"../constants/action-types.js\";\r\n\r\nexport const setPizzas = (pizzas) => {\r\n  return {\r\n    type: actionTypes.SET_PIZZAS,\r\n    payload: pizzas,\r\n  };\r\n};\r\n","import { orderProps } from \"../../interfaces/interfaces\";\r\n\r\nfunction Order({ order }: orderProps) {\r\n  return (\r\n    <div\r\n      className=\"col-md-4 row-eq-height m-2 p-1\"\r\n      data-aos=\"fade-up\"\r\n      style={{ backgroundColor: \"red\", color: \"white\" }}\r\n    >\r\n      <div className=\"flex-container\">\r\n        <div className=\"text-center w-100 m-1\">\r\n          <h2 style={{ fontSize: \"25px\" }}>Items</h2>\r\n          <hr />\r\n          {order.orderItems.map((items, key) => {\r\n            return (\r\n              <div key={key}>\r\n                <p>\r\n                  {items.name} [{items.variant}] * {items.quantity} ={\" \"}\r\n                  {items.price}\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"text-center w-100 m-1\">\r\n          <h2 style={{ fontSize: \"25px\" }}>Order Info</h2>\r\n          <hr />\r\n          <p>Order Amount : {order.orderAmount}</p>\r\n          <p>Date : {new Date(order.createdAt).toDateString()}</p>\r\n          <p>Order Id : {order._id}</p>\r\n          <p>\r\n            Delivery Status :{\" \"}\r\n            {order.isDelivered ? <>Delivered</> : <>Undelivered</>}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Order;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Order from \"../components/order/order\";\r\nimport { order } from \"../interfaces/interfaces\";\r\n\r\nfunction OrderScreen() {\r\n  let [ordersList, setOrders] = useState([] as any);\r\n\r\n  //getting list of all of user's orders\r\n  const getOrders = () => {\r\n    let userid = JSON.parse(localStorage.getItem(\"currentUser\") as string)._id;\r\n    axios\r\n      .post(\r\n        \"http://localhost:5000/getOrders\",\r\n        { userid },\r\n        {\r\n          headers: {\r\n            \"auth-token\": `${localStorage.getItem(\"jwt-token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setOrders(res.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        alert(\"Something bad happened!\");\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, []);\r\n\r\n  if (!ordersList[0]) {\r\n    return <>...Loading</>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-center mt-5 mb-3\" style={{ fontSize: \"35px\" }}>\r\n        My Orders\r\n      </h2>\r\n      <hr />\r\n      <div className=\"row justify-content-center\">\r\n        {ordersList.map((order: order, key: number) => {\r\n          return <Order order={order} key={key} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderScreen;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { order } from \"../interfaces/interfaces\";\r\nimport Order from \"../components/order/order\";\r\n\r\nfunction AllOrders() {\r\n  const [ordersList, setList] = useState([] as order[]);\r\n  const [isListUpdated, setListUpdated] = useState(false);\r\n\r\n  //getting all orders from the database for admin\r\n  const getOrders = async () => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `http://localhost:5000/getOrders/${\r\n          JSON.parse(localStorage.getItem(\"currentUser\") as string)._id\r\n        }`,\r\n        {\r\n          headers: {\r\n            \"auth-token\": `${localStorage.getItem(\"jwt-token\")}`,\r\n          },\r\n        }\r\n      );\r\n      setList(data);\r\n      setListUpdated(false);\r\n    } catch (e) {\r\n      alert(\"Something bad happened!\");\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  //enabling admin to update the delivery status of orders\r\n  const handleClick = async (orderID: string) => {\r\n    let data = {\r\n      orderID,\r\n      userid: JSON.parse(localStorage.getItem(\"currentUser\") as string)._id,\r\n    };\r\n    try {\r\n      await axios.put(\"http://localhost:5000/updateOrderStatus\", data, {\r\n        headers: {\r\n          \"auth-token\": `${localStorage.getItem(\"jwt-token\")}`,\r\n        },\r\n      });\r\n      alert(\"Updated!\");\r\n      setListUpdated(true);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  //updating the order list every time the delivery status is updated\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, [isListUpdated]);\r\n\r\n  if (!ordersList[0]) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      {ordersList.map((order, key) => {\r\n        return (\r\n          <div key={key}>\r\n            <div>\r\n              <Order order={order} />\r\n            </div>\r\n            <div className=\"m-2\">\r\n              <button className=\"btn\" onClick={() => handleClick(order._id)}>\r\n                Mark as delivered\r\n              </button>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllOrders;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport AddPizza from \"../screens/addpizzascreen\";\r\nimport Login from \"../components/login/login\";\r\nimport NavBar from \"../components/navbar/navbar\";\r\nimport Signin from \"../components/signin/signIn\";\r\nimport { loginStatusProps } from \"../interfaces/interfaces\";\r\nimport CartScreen from \"../screens/cartscreen\";\r\nimport Homescreen from \"../screens/homescreen\";\r\nimport OrderScreen from \"../screens/orderscreen\";\r\nimport AllOrders from \"../screens/adminorderscreen\";\r\n\r\nfunction Routes(props: loginStatusProps) {\r\n  return (\r\n    <Router>\r\n      <NavBar isLoggedIn={props.isLoggedIn} setLoggedIn={props.setLoggedIn} />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Homescreen />\r\n        </Route>\r\n        <Route exact path=\"/cart\">\r\n          <CartScreen isLoggedIn={props.isLoggedIn} />\r\n        </Route>\r\n        {props.isLoggedIn ? (\r\n          <Route exact path=\"/orders\">\r\n            <OrderScreen />\r\n          </Route>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/login\">\r\n              <Login\r\n                isLoggedIn={props.isLoggedIn}\r\n                setLoggedIn={props.setLoggedIn}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/signin\">\r\n              <Signin />\r\n            </Route>\r\n          </>\r\n        )}\r\n        {JSON.parse(localStorage.getItem(\"isAdmin\") as string) ? (\r\n          <Route exact path=\"/addPizza\">\r\n            <AddPizza />\r\n          </Route>\r\n        ) : null}\r\n        {JSON.parse(localStorage.getItem(\"isAdmin\") as string) ? (\r\n          <Route exact path=\"/allOrders\">\r\n            <AllOrders />\r\n          </Route>\r\n        ) : null}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport { useState } from \"react\";\r\nimport { cartItem } from \"./interfaces/interfaces\";\r\nimport Routes from \"./routes/routes\";\r\n\r\nAOS.init();\r\nfunction App() {\r\n  //setting logged in status in local storage\r\n  let [isLoggedIn, setLoggedIn] = useState(\r\n    !(localStorage.getItem(\"currentUser\") === null)\r\n  );\r\n\r\n  //setting cart array in local storage\r\n  if (localStorage.getItem(\"cart\") === null) {\r\n    localStorage.setItem(\"cart\", JSON.stringify([] as cartItem[]));\r\n  }\r\n\r\n  //setting admin status in local storage\r\n  if (localStorage.getItem(\"isAdmin\") === null) {\r\n    localStorage.setItem(\"isAdmin\", JSON.stringify(false));\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes isLoggedIn={isLoggedIn} setLoggedIn={setLoggedIn} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { actionTypes } from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n  pizzas: [],\r\n};\r\n\r\nexport const pizzaReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.SET_PIZZAS:\r\n      return { ...state, pizzas: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { pizzaReducer } from \"./pizzaReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  allPizzas: pizzaReducer,\r\n});\r\n\r\nexport default reducers;\r\n","import { createStore } from \"redux\";\r\nimport reducers from \"./reducers/index.js\";\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}